name: benchmark

on:
  workflow_dispatch: # Manual trigger
  push:
    branches: [bench]

permissions:
  contents: write # Allows this workflow to push to the gh-pages branch
  pull-requests: write

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build gcc g++ python3 python3-pip
          pip3 install matplotlib

      # Step 3: Build liboqs
      - name: Build liboqs
        run: |
          mkdir build && cd build
          cmake -GNinja .. -DCMAKE_C_FLAGS="-O3 -march=native" -DBUILD_SHARED_LIBS=ON
          ninja

      # Step 4: Run memory and speed tests
      - name: Run liboqs tests
        run: |
          cd build/tests

          # Initialize JSON file
          echo '{' > benchmark_results.json

          # Run memory tests (test_kem_mem and test_sig_mem)
          echo '  "Memory Tests": {' >> benchmark_results.json
          for test in test_kem_mem test_sig_mem; do
            if [ -f "$test" ]; then
              echo "Running $test..."
              ./$test --help | grep -oP '(?<=algname: ).*' | tr ',' '\n' > algorithms.txt
              while read -r alg; do
                for op in 0 1 2; do
                  result=$(./$test "$alg" "$op" 2>/dev/null || echo "error")
                  echo "    \"$test-$alg-$op\": \"$result\"," >> benchmark_results.json
                done
              done < algorithms.txt
            fi
          done
          echo '  },' >> benchmark_results.json

          # Run speed tests (speed_kem and speed_sig)
          echo '  "Speed Tests": {' >> benchmark_results.json
          for test in speed_kem speed_sig; do
            if [ -f "$test" ]; then
              echo "Running $test..."
              ./$test | awk '/^[A-Za-z]/ {print "    \"" $1 "\": \"" $2 "\","}' >> benchmark_results.json
            fi
          done
          echo '  }' >> benchmark_results.json

          # Finalize JSON file
          echo '}' >> benchmark_results.json

      # Step 5: Upload benchmark results
      - name: Publish benchmark results
        uses: benchmark-action/github-action-benchmark@v1.20.4
        with:
          name: liboqs-benchmark
          tool: "customSmallerIsBetter"
          output-file-path: build/tests/benchmark_results.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          comment-on-alert: true
          summary-always: true
          alert-threshold: "105%"

      # Step 6: Upload benchmark results as an artifact
      - name: Upload benchmark results as artifact
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: build/tests/benchmark_results.json