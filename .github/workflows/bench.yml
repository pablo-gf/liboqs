name: benchmark

on:
  workflow_dispatch: # Manual trigger
  push:
    branches: [bench]

permissions:
  contents: write # Allows this workflow to push to the gh-pages branch
  pull-requests: write

jobs:
  benchmark:
    name: benchmark
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build gcc g++ python3 python3-pip
          pip3 install matplotlib

          - name: Setup Environment
          run: |
            ARCH=$(uname -m)
            echo "## Setup" >> $GITHUB_STEP_SUMMARY
            echo "Architecture: $ARCH" >> $GITHUB_STEP_SUMMARY
            echo "- $(uname -a)" >> $GITHUB_STEP_SUMMARY
            echo "- $(gcc --version | head -n 1)" >> $GITHUB_STEP_SUMMARY
            echo "- $(bash --version | head -n 1)" >> $GITHUB_STEP_SUMMARY
            echo "## CPU Info" >> $GITHUB_STEP_SUMMARY
            cat /proc/cpuinfo >> $GITHUB_STEP_SUMMARY
  
      - name: Build liboqs
        run: |
          mkdir build && cd build
          cmake -GNinja .. -DCMAKE_C_FLAGS="-O3 -march=native" -DBUILD_SHARED_LIBS=ON
          ninja

      - name: Run benchmarks
        run: |
          cd build/tests
          ./test_kem_mem > test_kem_mem.txt
          ./test_sig_mem > test_sig_mem.txt
          ./speed_kem > speed_kem_results.txt
          ./speed_sig > speed_sig_results.txt
          ./speed_sig_stfl > speed_sig_stfl.txt
          
      - name: Generate JSON results
        run: |
          echo '{' > build/tests/benchmark_results.json
          echo '  "KEM Memory": {' >> build/tests/benchmark_results.json
          awk '/Algorithm/ {alg=$2} /Memory/ {print "    \"" alg "\": " $2 ","}' test_kem_mem.txt >> build/tests/benchmark_results.json
          echo '  },' >> build/tests/benchmark_results.json
          echo '  "Signature Memory": {' >> build/tests/benchmark_results.json
          awk '/Algorithm/ {alg=$2} /Memory/ {print "    \"" alg "\": " $2 ","}' test_sig_mem.txt >> build/tests/benchmark_results.json
          echo '  },' >> build/tests/benchmark_results.json
          echo '  "KEM Speed": {' >> build/tests/benchmark_results.json
          awk '/Algorithm/ {alg=$2} /Time/ {print "    \"" alg "\": " $2 ","}' speed_kem_results.txt >> build/tests/benchmark_results.json
          echo '  },' >> build/tests/benchmark_results.json
          echo '  "Signature Speed": {' >> build/tests/benchmark_results.json
          awk '/Algorithm/ {alg=$2} /Time/ {print "    \"" alg "\": " $2 ","}' speed_sig_results.txt >> build/tests/benchmark_results.json
          echo '  },' >> build/tests/benchmark_results.json
          echo '  "Signature STFL Speed": {' >> build/tests/benchmark_results.json
          awk '/Algorithm/ {alg=$2} /Time/ {print "    \"" alg "\": " $2 ","}' speed_sig_stfl.txt >> build/tests/benchmark_results.json
          echo '  }' >> build/tests/benchmark_results.json
          echo '}' >> build/tests/benchmark_results.json

      - name: Store benchmark results
        uses: benchmark-action/github-action-benchmark@v1.20.4
        with:
          name: liboqs-benchmark
          tool: "customSmallerIsBetter"
          output-file-path: build/tests/benchmark_results.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          comment-on-alert: true
          summary-always: true
          alert-threshold: "105%"