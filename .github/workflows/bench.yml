name: benchmark

on:
  workflow_dispatch: # Manual trigger
  push:
    branches: [bench]

permissions:
  contents: write # Allows this workflow to push to the gh-pages branch
  pull-requests: write

jobs:
  benchmark:
    name: benchmark
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build gcc g++ python3 python3-pip
          pip3 install matplotlib

      - name: Setup Environment
        run: |
          ARCH=$(uname -m)
          echo "## Setup" >> $GITHUB_STEP_SUMMARY
          echo "Architecture: $ARCH" >> $GITHUB_STEP_SUMMARY
          echo "- $(uname -a)" >> $GITHUB_STEP_SUMMARY
          echo "- $(gcc --version | head -n 1)" >> $GITHUB_STEP_SUMMARY
          echo "- $(bash --version | head -n 1)" >> $GITHUB_STEP_SUMMARY
          echo "## CPU Info" >> $GITHUB_STEP_SUMMARY
          cat /proc/cpuinfo >> $GITHUB_STEP_SUMMARY
  
      - name: Build liboqs
        run: |
          mkdir build && cd build
          cmake -GNinja .. -DCMAKE_C_FLAGS="-O3 -march=native" -DBUILD_SHARED_LIBS=ON
          ninja

          - name: Run benchmarks
          run: |
            cd build/tests
            
            # Extract all supported algorithms for test_kem_mem
            echo "Extracting supported algorithms for test_kem_mem..."
            ./test_kem_mem --help | grep -oP '(?<=algname: ).*' | tr ',' '\n' > algorithms.txt
            
            # Run test_kem_mem for all algorithms and operations
            echo '{' > benchmark_results.json
            echo '  "KEM Memory": {' >> benchmark_results.json
            while read -r alg; do
              for op in 0 1 2; do
                result=$(./test_kem_mem "$alg" "$op" 2>/dev/null || echo "error")
                echo "    \"$alg-$op\": \"$result\"," >> benchmark_results.json
              done
            done < algorithms.txt
            echo '  },' >> benchmark_results.json
            
            # Run speed_kem and append results to JSON
            echo '  "KEM Speed": {' >> benchmark_results.json
            ./speed_kem | awk '/^[A-Za-z]/ {print "    \"" $1 "\": \"" $2 "\","}' >> benchmark_results.json
            echo '  },' >> benchmark_results.json
            
            # Run speed_sig and append results to JSON
            echo '  "Signature Speed": {' >> benchmark_results.json
            ./speed_sig | awk '/^[A-Za-z]/ {print "    \"" $1 "\": \"" $2 "\","}' >> benchmark_results.json
            echo '  },' >> benchmark_results.json
            
            # Run speed_sig_stfl and append results to JSON
            echo '  "Signature STFL Speed": {' >> benchmark_results.json
            ./speed_sig_stfl | awk '/^[A-Za-z]/ {print "    \"" $1 "\": \"" $2 "\","}' >> benchmark_results.json
            echo '  }' >> benchmark_results.json
            
            echo '}' >> benchmark_results.json

      - name: Store benchmark results
        uses: benchmark-action/github-action-benchmark@v1.20.4
        with:
          name: liboqs-benchmark
          tool: "customSmallerIsBetter"
          output-file-path: build/tests/benchmark_results.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          comment-on-alert: true
          summary-always: true
          alert-threshold: "105%"